unit uSign;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Data.DB,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.StdCtrls, Vcl.Mask, Vcl.DBCtrls;

type
  TfrmSign = class(TForm)
    qryInsert: TFDQuery;
    DataSource1: TDataSource;
    qryInsertid: TFDAutoIncField;
    qryInsertnome: TStringField;
    qryInsertemail: TStringField;
    qryInsertsenha: TStringField;
    Label1: TLabel;
    edtNome: TDBEdit;
    Label2: TLabel;
    edtEmail: TDBEdit;
    Label3: TLabel;
    edtSenha: TDBEdit;
    btnCadastrar: TButton;
    procedure FormCreate(Sender: TObject);
    procedure btnCadastrarClick(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmSign: TfrmSign;

implementation

{$R *.dfm}

uses uDataModule, uMain;

var
  dm: TdataModule;

procedure TfrmSign.btnCadastrarClick(Sender: TObject);
var
  nome: String;
  email: String;
  senha: String;
begin
  nome := edtnome.Text;
  email := edtEmail.Text;
  senha := edtSenha.Text;

  if nome.IsEmpty or email.IsEmpty or senha.IsEmpty then
  begin
    ShowMessage('Preencha todos os campos');
    Exit;
  end;

  try
    qryInsert.Post;
  except
    ShowMessage('Ocorreu um erro ao realizar o cadastro');
    Exit;
  end;

  TfrmMain.user := nome;
  TfrmMain.email := email;

  Self.Close;
end;

procedure TfrmSign.FormCreate(Sender: TObject);
begin
  qryInsert.Open;
  qryInsert.Insert;

  dm := TdataModule.Create(Self);
end;

procedure TfrmSign.FormDestroy(Sender: TObject);
begin
  qryInsert.Close;
  dm.Free;
end;

end.
